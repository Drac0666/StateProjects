from msg2pdf import MsgReader
from xhtml2pdf import pisa
import os

def convert_msg_to_pdf(msg_file_path, pdf_output_path):
    try:
        # Create a MsgReader instance
        msg_reader = MsgReader(msg_file_path)

        # Get email body as HTML
        body_html = msg_reader.body

        # Save HTML to a temporary file
        temp_html_path = 'temp_email.html'
        with open(temp_html_path, 'w', encoding='utf-8') as html_file:
            html_file.write(body_html)

        # Convert HTML to PDF using xhtml2pdf
        with open(temp_html_path, 'rb') as source_html:
            with open(pdf_output_path, 'wb') as output_pdf:
                pisa.CreatePDF(source_html, dest=output_pdf)

        print(f"Converted {msg_file_path} to {pdf_output_path}")

    except Exception as e:
        print(f"Error: {e}")

    finally:
        # Remove temporary HTML file
        if os.path.exists(temp_html_path):
            os.remove(temp_html_path)

# Example usage
# Replace 'path_to_your_email.msg' with the actual path to your .msg file
msg_file_path = 'path_to_your_email.msg'
pdf_output_path = 'output.pdf'

convert_msg_to_pdf(msg_file_path, pdf_output_path)






import openpyxl
from openpyxl.drawing.image import Image

# Path to your Excel file
excel_file_path = 'path/to/your/excel/file.xlsx'

# Create a new workbook object
workbook = openpyxl.load_workbook(excel_file_path)

# Specify the sheet and chart name
sheet_name = 'Sheet1'
chart_name = 'Chart 1'  # Adjust to match the name of your chart

# Get the chart object
chart = workbook[sheet_name].charts[chart_name]

# Assuming your chart is in cell A1 (adjust accordingly)
chart_img_path = 'chart_image.png'
chart_img_size = (600, 400)  # Adjust the size as needed

# Save the chart as an image
chart_img = Image(chart.render())
chart_img.save(chart_img_path)

# Close the workbook
workbook.close()

