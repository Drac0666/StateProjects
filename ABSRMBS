# Sample dictionary
data_dict = {
    'DATE_MM': '2023-11-01|2023-11-02|2023-11-03|2023-11-04|2023-11-05|2023-11-06|2023-11-07|2023-11-08|2023-11-09|2023-11-10',
    'CPR': 'CPR1|CPR2||CPR4|NA||||CPR8||'
}

# Split the values by '|' to get lists of dates and CPR values
date_mm_values = data_dict['DATE_MM'].split('|')
cpr_values = data_dict['CPR'].split('|')

# Create a mapping between dates and CPR values, skipping empty and "NA" values
date_cpr_mapping = {}
for date, cpr in zip(date_mm_values, cpr_values):
    if cpr and cpr != "NA":
        date_cpr_mapping[date] = cpr

# Example: Get CPR value for a specific date
desired_date = '2023-11-04'
if desired_date in date_cpr_mapping:
    cpr_value = date_cpr_mapping[desired_date]
    print(f"For date {desired_date}, the CPR value is {cpr_value}")
else:
    print(f"No CPR value found for date {desired_date}")




counts_df.index = counts_df.index.astype(str).str.replace(r'[\[\]()]', '').str.replace(', ', '-').str.split(',').str[0]
import pandas as pd
import numpy as np

# Sample data (replace this with your actual data)
data = {
    'column1': np.random.randint(1, 101, 100),  # Generating random data for column1
    'column2': np.random.randint(1, 101, 100)  # Generating random data for column2
}

df = pd.DataFrame(data)

# Combine data from both columns
combined_data = pd.concat([df['column1'], df['column2']])

# Specify the number of bins
num_bins = 10

# Calculate bin edges based on the combined data
min_val = combined_data.min()
max_val = combined_data.max()
bin_width = (max_val - min_val) / num_bins
bin_edges = [min_val + i * bin_width for i in range(num_bins + 1)]

# Apply pd.cut to both columns using the same bin edges
df['bin_range_column1'] = pd.cut(df['column1'], bins=bin_edges)
df['bin_range_column2'] = pd.cut(df['column2'], bins=bin_edges)

# Display the DataFrame with assigned ranges for both columns
print(df)

count_column1 = df['bin_range_column1'].value_counts()
count_column2 = df['bin_range_column2'].value_counts()
counts_df = pd.DataFrame({'Count_Column1': count_column1, 'Count_Column2': count_column2}).fillna(0)
