import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import calendar

# Read DataFrame from clipboard
df = pd.read_clipboard()

# Convert 'Maturity' to datetime format (if necessary)
df['Maturity'] = pd.to_datetime(df['Maturity'])

# Filter for maturity in 2024
df_2024 = df[df['Maturity'].dt.year == 2024]

# Group and pivot for plotting
df_grouped = df_2024.groupby(['Sub-Asset Class', df_2024['Maturity'].dt.month, 'Designation'])['Par value'].sum()
df_pivoted = df_grouped.unstack(['Sub-Asset Class', 'Designation'], fill_value=0) 

# Customize for Specific Maturity Months
maturity_months = df_pivoted.index.to_list() 
month_names = [calendar.month_abbr[month] for month in maturity_months]

# Plot
plt.figure(figsize=(12, 6)) 
df_pivoted.plot(kind='bar')

# Customize plot elements 
plt.xticks(range(len(month_names)), month_names) 
plt.xlabel('Maturity Month')
plt.ylabel('Par Value (2024)')
plt.title('Par Value by Maturity Month, Sub-Asset Class, and Designation (2024)')

# Format y-axis in millions
plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: f'{x / 1e6:.1f}M'))

plt.tight_layout()
plt.legend(title='Sub-Asset Class / Designation') # Combined legend

# Save as JPG
plt.savefig('maturity_plot.jpg', dpi=300) 

plt.show()  
