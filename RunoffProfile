import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import calendar

# Read DataFrame from clipboard
df = pd.read_clipboard()

# Convert 'Maturity' to datetime format (if necessary)
df['Maturity'] = pd.to_datetime(df['Maturity'])

# Filter for maturity in 2024
df_2024 = df[df['Maturity'].dt.year == 2024]

# Group data, including maturity month
df_grouped = df_2024.groupby(['Sub-Asset Class', df_2024['Maturity'].dt.month])['Par value'].sum()
df_pivoted = df_grouped.unstack(fill_value=0)

# Customize for Specific Maturity Months
maturity_months = df_pivoted.index.to_list() 
month_names = [calendar.month_abbr[month] for month in maturity_months]

# Plot
plt.figure(figsize=(12, 6)) 

# Text Annotations for Designation 
for container in plt.gca().containers:
    bars = plt.bar(container.get_children())
    for bar in bars:
        x = bar.get_x() + bar.get_width()/2
        y = bar.get_height()
        text = df_pivoted.loc[x][0]  # Assuming the first 'Designation' 
        plt.annotate(text, (x, y), ha='center', va='bottom')

# Customize plot elements 
plt.xticks(range(len(month_names)), month_names) 
plt.xlabel('Maturity Month')
plt.ylabel('Par Value (2024)')
plt.title('Par Value by Maturity Month (2024)')

# Format y-axis in millions
plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: f'{x / 1e6:.1f}M'))

plt.tight_layout()

# Save as JPG
plt.savefig('maturity_plot.jpg', dpi=300) 

plt.show()  
