# Customize for Specific Maturity Months
maturity_months = df_pivoted.index.to_list()  # Get the actual maturity months present 
month_names = [calendar.month_abbr[month] for month in maturity_months]

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

# ... (Code for reading data, filtering, and grouping remains the same)

# Plot
plt.figure(figsize=(12, 6)) 
df_pivoted.plot(kind='bar')
plt.xticks(range(len(month_names)), month_names) 

# Customize plot (other labels remain the same)
plt.xlabel('Maturity Month')
plt.ylabel('Par Value (2024)')
plt.title('Par Value by Maturity Month (2024)') 

# Format y-axis in millions
plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: f'{x / 1e6:.1f}M'))

plt.tight_layout()
plt.legend(title='Sub-Asset Class') 

plt.show()

