options = Firefox_Options()
options.set_preference("browser.download.panel.shown", False)
options.set_preference("browser.download.animateNotifications", False)
options.set_preference("browser.download.dir", "C:\\temp")
options.set_preference("browser.download.folderList", 2)
options.set_preference("browser.helperApps.alwaysAsk.force", False)
options.set_preference("browser.download.manager.showWhenStarting", False)
options.set_preference(
    "browser.helperApps.neverAsk.saveToDisk",
    (
        "application/pdf, application/zip, application/octet-stream, "
        "text/csv, text/xml, application/xml, text/plain, "
        "text/octet-stream, application/x-gzip, application/x-tar "
        "application/"
        "vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    ),
)






from selenium import webdriver
import time

# Set the path to your browser driver (e.g., chromedriver.exe)
driver_path = '/path/to/chromedriver'

# Create a new instance of the Chrome driver
driver = webdriver.Chrome(executable_path=driver_path)

# Open the webpage with the download button
driver.get("https://example.com")

# Find and click the download button
download_button = driver.find_element_by_id("download-button")  # Replace with the actual ID or other identifier
download_button.click()

# Wait for the download to complete (you might need to adjust the time)
time.sleep(5)

# Close the browser window
driver.quit()






from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select

# Create a new instance of the Chrome driver (you can use other drivers like Firefox as well)
driver = webdriver.Chrome()

# Open a website with a button that reveals options
driver.get("https://www.example.com")

# Find and click the button to reveal the options
button = driver.find_element(By.ID, "your_button_id")
button.click()

# Wait for the dropdown options to be visible (adjust the timeout as needed)
wait = WebDriverWait(driver, 10)
dropdown_element = wait.until(EC.visibility_of_element_located((By.ID, "your_dropdown_id")))

# Create a Select object for the dropdown
select = Select(dropdown_element)

# Select an option by visible text
select.select_by_visible_text("Option 1")

# Alternatively, you can select an option by value or index:
# select.select_by_value("option_value")
# select.select_by_index(0)

# Close the browser window
driver.quit()







from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By

# Create a new instance of the Chrome driver (you can use other drivers like Firefox as well)
driver = webdriver.Chrome()

# Open a website with a dropdown
driver.get("https://www.example.com")

# Find the dropdown element by its HTML attribute (e.g., ID, name, class)
dropdown = driver.find_element(By.ID, "your_dropdown_id")

# Create a Select object
select = Select(dropdown)

# Select an option by visible text
select.select_by_visible_text("Option 1")

# Alternatively, you can select an option by value or index:
# select.select_by_value("option_value")
# select.select_by_index(0)

# Close the browser window
driver.quit()



def addToClipBoard(text):
    command = 'echo | set /p nul=' + text.strip() + '| clip'
    os.system(command)

import pandas as pd
from openpyxl import load_workbook

# Load the Excel file into a DataFrame
excel_file_path = "Bulk.xlsx"
df = pd.read_excel(excel_file_path)

# Extract the 'ISIN' column
isin_column = df['ISIN']

# Specify the starting row to write in the Excel file
start_row = 6

# Open the Excel file for writing with the existing content
with pd.ExcelWriter("BulkUpload.xlsx", engine='openpyxl') as writer:
    # Write the existing content from "Bulk.xlsx"
    writer.book = load_workbook(excel_file_path)
    writer.sheets = {ws.title: ws for ws in writer.book.worksheets}

    # Write the 'ISIN' column to the specified rows
    for row_index, isin_value in enumerate(isin_column, start=start_row):
        sheet_name = "Sheet1"  # Modify this if your sheet has a different name
        writer.sheets[sheet_name].cell(row=row_index, column=1, value=isin_value)

    # Write the constant values in the last two rows
    writer.sheets[sheet_name].cell(row=row_index + 1, column=1, value="OK")
    writer.sheets[sheet_name].cell(row=row_index + 2, column=1, value="done")

print("File saved as BulkUpload.xlsx")
