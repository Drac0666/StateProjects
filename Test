import wx

def on_text_change(event):
    new_text = event.GetString()
    print(f"Text changed: {new_text}")

def on_char(event):
    key = event.GetKeyCode()

    # Allow digits, backspace, and delete
    if key < wx.WXK_SPACE or key == wx.WXK_BACK or key == wx.WXK_DELETE:
        event.Skip()
        return

    # Allow only numeric input
    if not chr(key).isdigit():
        return

    event.Skip()

app = wx.App(False)
frame = wx.Frame(None, title="Numeric TextCtrl Example", size=(300, 100))

text_ctrl = wx.TextCtrl(frame, style=wx.TE_PROCESS_ENTER)
frame.Bind(wx.EVT_TEXT, on_text_change, text_ctrl)
frame.Bind(wx.EVT_CHAR, on_char, text_ctrl)

sizer = wx.BoxSizer(wx.VERTICAL)
sizer.Add(text_ctrl, 0, wx.EXPAND | wx.ALL, 10)

frame.SetSizer(sizer)
frame.Show()

app.MainLoop()




import openpyxl

def create_sheets_from_column_a(file_path):
    # Load the workbook
    workbook = openpyxl.load_workbook(file_path)
    
    # Select the active sheet (assuming data is in the first sheet)
    sheet = workbook.active
    
    # Get the values in columns A, B, and C (starting from the second row)
    data_to_copy = [(cell.value, sheet.cell(row=cell.row, column=2).value, sheet.cell(row=cell.row, column=3).value)
                    for cell in sheet['A'][1:]]
    
    # Iterate through non-empty values in column "A" and create sheets
    for values in data_to_copy:
        if values[0] is not None:
            # Create a new sheet with the name based on the cell value
            new_sheet = workbook.create_sheet(title=str(values[0]))
            
            # Copy values from columns A, B, and C to the new sheet
            new_sheet.append(values)
            
    # Save the modified workbook
    workbook.save(file_path)

# Specify the path to your Excel file
excel_file_path = "path/to/your/file.xlsx"

# Call the function to create sheets and copy values
create_sheets_from_column_a(excel_file_path)
