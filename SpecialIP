import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt

# Load the shapefile (replace 'NUTS_shapefile.shp' with your actual file)
shapefile_path = "NUTS_shapefile.shp"
nuts_gdf = gpd.read_file(shapefile_path)

# Sample dataset with NUTS codes and DQ data
data = {
    'NUTS': ['NUTS1', 'NUTS2', 'NUTS3', 'NUTS2', 'NUTS1', 'NUTS3'],
    'DQ': [1, 0, 1, 1, 0, 0],
    'Current Balance': [100000, 150000, 50000, 200000, 300000, 100000]
}
df = pd.DataFrame(data)

# Aggregate DQ = 1 data by NUTS codes
dq_data = df.groupby(['NUTS', 'DQ'])['Current Balance'].sum().unstack(fill_value=0).reset_index()
dq_data['DQ_1_Percentage'] = dq_data[1] / (dq_data[0] + dq_data[1]) * 100

# Merge the aggregated data with the shapefile GeoDataFrame
merged_gdf = nuts_gdf.merge(dq_data, left_on='NUTS_CODE', right_on='NUTS', how='left')

# Plot the data using geopandas
fig, ax = plt.subplots(1, 1, figsize=(12, 10))
merged_gdf.plot(
    column='DQ_1_Percentage',  # The column to visualize
    cmap='Reds',               # Color scheme
    legend=True,               # Add a legend
    ax=ax,
    missing_kwds={"color": "lightgrey", "label": "No data"}
)

# Annotate region names
for idx, row in merged_gdf.iterrows():
    if not pd.isnull(row['DQ_1_Percentage']):  # Add names only for regions with data
        plt.annotate(
            text=row['NUTS_NAME'],  # Replace 'NUTS_NAME' with the actual column for region names in your shapefile
            xy=(row.geometry.centroid.x, row.geometry.centroid.y),  # Region centroid
            ha='center', fontsize=8, color='black'
        )

# Add titles and labels
ax.set_title("Percentage of DQ = 1 by NUTS Region", fontsize=14)
ax.axis("off")

plt.show()
