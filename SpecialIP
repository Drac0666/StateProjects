from sklearn.cluster import KMeans
import numpy as np

# Convert 'Original Balance' into a 2D array for KMeans
X = df[['Original Balance']].values

# Apply KMeans clustering (6 clusters for example)
kmeans = KMeans(n_clusters=6, random_state=0)
df['Cluster'] = kmeans.fit_predict(X)

# Sort clusters by mean value of 'Original Balance'
df['Cluster'] = df.groupby('Cluster')['Original Balance'].transform(lambda x: pd.qcut(x, q=1).codes[0])

# Get the frequency of each cluster
cluster_distribution = df['Cluster'].value_counts().sort_index()

# Display the results
print("Distribution of 'Original Balance' using KMeans Clustering:")
print(cluster_distribution)

# Plot the distribution
cluster_distribution.plot(kind='bar', color='lightgreen')
plt.title('KMeans Clustering of Original Balance')
plt.xlabel('Cluster')
plt.ylabel('Frequency')
plt.show()
