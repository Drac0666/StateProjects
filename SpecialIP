import pandas as pd

def calculate_volatility(df):
    """
    Computes the volatility of X for each cusip, using standard deviation.
    
    :param df: pandas DataFrame with 'AsOfDate', 'cusip', and 'X' columns
    :return: DataFrame with a new 'Volatility' column indicating how much 'X' changes for each cusip
    """
    # Ensure data is sorted by date
    df = df.sort_values(by=['AsOfDate'])
    
    # Calculate standard deviation of X per cusip
    volatility_df = df.groupby('cusip')['X'].std().reset_index().rename(columns={'X': 'Volatility'})
    
    # Merge back to original df to show volatility for each cusip
    df = df.merge(volatility_df, on='cusip', how='left')
    
    return df

# Sample Data
data = {
    'AsOfDate': ['2024-01-01', '2024-01-02', '2024-01-03', '2024-01-01', '2024-01-02', '2024-01-03'],
    'cusip': ['123456', '123456', '123456', '789012', '789012', '789012'],
    'X': [100, 150, 120, 50, 55, 60],  # Column to detect volatility on
    'Y': ['A', 'B', 'C', 'D', 'E', 'F']
}

df = pd.DataFrame(data)

# Calculate volatility
df_with_volatility = calculate_volatility(df)

# Display the result
import ace_tools as tools
tools.display_dataframe_to_user(name="Data with Volatility", dataframe=df_with_volatility)
