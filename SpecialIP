def detect_anomaly(db_file: str = DB_FILE):
    df = pd.read_excel(db_file, index_col=ISIN_COL)
    asset_class = df["Asset Class"]
    df = df.drop(columns="Asset Class")
    date_columns = list(df.columns)

    anomalies = []

    def binary_pattern(series):
        return [1 if v > 0 else 0 for v in series]

    for isin, row in df.iterrows():
                series = row.astype(float).tolist()
        binary = binary_pattern(series)
        pattern_str = ''.join(map(str, binary))

        for i in range(1, len(binary) - 1):
            window = binary[i - 1:i + 2]
            if window in ([0, 1, 0], [1, 0, 1]):
                anomalies.append({
                    "ISIN": isin,
                    "Asset Class": asset_class[isin],
                    "Pattern": pattern_str,
                    "Anomaly Type": "0-1-0" if window == [0, 1, 0] else "1-0-1",
                    "Anomaly Window": f"{date_columns[i-1]} → {date_columns[i]} → {date_columns[i+1]}"
                })
                break

    if anomalies:
        result_df = pd.DataFrame(anomalies)
        result_df.to_excel("anomalies.xlsx", index=False)
        print(f"Anomalies detected and saved to anomalies.xlsx ({len(result_df)} rows)")
    else:
        print("No anomalies detected.")
