import pandas as pd

# Load your dataset
# df = pd.read_csv('your_dataset.csv')

# Example selected column and Delinquency
selected_column = 'Column1'  # Replace with your actual column name

# Convert 'Delinquency' column to binary (1 for 'Y', 0 for 'N')
df['Delinquency'] = df['Delinquency'].apply(lambda x: 1 if x == 'Y' else 0)

# Create a contingency table between the selected column and Delinquency
contingency_table = pd.crosstab(df[selected_column], df['Delinquency'], normalize='index')

# Display the contingency table
print("Contingency Table (Proportions of Delinquency per Category):\n")
print(contingency_table)

# Calculate the proportion of 'Y' (Delinquency = 1) for each category
contingency_table['Proportion_Y'] = contingency_table[1]  # 1 represents Delinquency = 'Y'

# Sort the categories by the proportion of 'Y' (Delinquency = Y)
sorted_table = contingency_table.sort_values(by='Proportion_Y', ascending=False)

# Display the sorted table to the user
import ace_tools as tools; tools.display_dataframe_to_user(name="Category Influence on Delinquency", dataframe=sorted_table)

# Find the category with the highest proportion of Delinquency = Y
most_influential_category = sorted_table.iloc[0]
print(f"The most influential category is: {most_influential_category.name} with a Delinquency rate of {most_influential_category['Proportion_Y']:.2f}")

