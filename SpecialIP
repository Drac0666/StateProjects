import pandas as pd

# Sample DataFrame structure
data = {
    "Main Region": ["Region1", "Region1", "Region2", "Region2", "Region3", "Region3"],
    "Occupancy": ["Owner", "Tenant", "Owner", "Tenant", "Owner", "Tenant"],
    "Original Balance": [100000, 150000, 200000, 250000, 300000, 350000],
    "Orig LTV": [75, 80, 70, 85, 65, 90],
    "DQ": [1, 0, 1, 1, 0, 0],
    "Current Balance": [90000, 140000, 180000, 240000, 290000, 340000],
}

df = pd.DataFrame(data)

# Calculate DQ percentages for Owner and Tenant separately
dq_percentage = (
    df.groupby(["Main Region", "Occupancy"])
    .agg(DQ_Percentage=("DQ", lambda x: (x.sum() / len(x)) * 100))
    .unstack()
)

# Create the DQ percentage string
dq_percentage_str = dq_percentage.apply(
    lambda row: f"Owner {row[('DQ_Percentage', 'Owner')]:.1f}% / Tenant {row[('DQ_Percentage', 'Tenant')]:.1f}%",
    axis=1,
)

# Calculate region-wise totals and averages
region_totals = df.groupby("Main Region").agg(
    Avg_Original_Balance=("Original Balance", "mean"),
    Avg_Orig_LTV=("Orig LTV", "mean"),
    Total_Current_Balance=("Current Balance", "sum"),
).reset_index()

# Calculate contribution to the total "Current Balance"
total_current_balance = region_totals["Total_Current_Balance"].sum()
region_totals["Contribution_to_Total"] = (
    region_totals["Total_Current_Balance"] / total_current_balance * 100
)

# Add the DQ percentage string column
region_totals["DQ_Percentage_String"] = region_totals["Main Region"].map(dq_percentage_str)

# Display the result
print(region_totals)
