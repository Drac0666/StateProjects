import pandas as pd

# Load your dataset
# df = pd.read_csv('your_dataset.csv')

# Example of multiple selected columns
selected_columns = ['Column1', 'Column2', 'Column3']  # Replace with your actual column names

# Convert 'Delinquency' column to binary (1 for 'Y', 0 for 'N')
df['Delinquency'] = df['Delinquency'].apply(lambda x: 1 if x == 'Y' else 0)

# Filter the dataset to only include rows where Delinquency = 1
delinquent_data = df[df['Delinquency'] == 1]

# Group by the selected columns and count the occurrences where Delinquency = 1
grouped_counts = delinquent_data.groupby(selected_columns).size().reset_index(name='Count')

# Sort the result by the count of delinquency cases
sorted_counts = grouped_counts.sort_values(by='Count', ascending=False)

# Display the sorted counts to the user
import ace_tools as tools; tools.display_dataframe_to_user(name="Combinations Influence on Delinquency = 1", dataframe=sorted_counts)

# Find the combination with the most influence (the highest count)
most_influential_combination = sorted_counts.iloc[0]
print(f"The most influential combination for Delinquency = 1 is:\n{most_influential_combination[selected_columns]} with {most_influential_combination['Count']} occurrences.")
