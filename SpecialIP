import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report
from sklearn.preprocessing import LabelEncoder

# Wczytaj dane do DataFrame
df = pd.read_csv('twoje_dane.csv')

# Zakładam, że kolumna "Delinquency" ma wartości 'Y' oraz 'N'. Zakoduj je na wartości 0 i 1
df['Delinquency'] = df['Delinquency'].apply(lambda x: 1 if x == 'Y' else 0)

# Upewnij się, że inne kolumny są w odpowiednim formacie, np. numerycznym
# Jeśli masz kolumny kategoryczne, możesz użyć LabelEncoder
labelencoder = LabelEncoder()
for column in df.select_dtypes(include=['object']).columns:
    df[column] = labelencoder.fit_transform(df[column])

# Zdefiniuj zmienne X (wszystkie kolumny poza Delinquency) i y (Delinquency)
X = df.drop('Delinquency', axis=1)
y = df['Delinquency']

# Podziel dane na zbiór treningowy i testowy
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Zbuduj model regresji logistycznej
model = LogisticRegression()
model.fit(X_train, y_train)

# Przewiduj na podstawie zbioru testowego
y_pred = model.predict(X_test)

# Wyświetl raport klasyfikacji
print(classification_report(y_test, y_pred))

# Sprawdź współczynniki modelu, aby zobaczyć, które zmienne mają największy wpływ
coefficients = pd.DataFrame({"Feature": X.columns, "Coefficient": np.abs(model.coef_[0])})
coefficients = coefficients.sort_values(by='Coefficient', ascending=False)

print(coefficients)
