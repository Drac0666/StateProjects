import plotly.express as px
import pandas as pd
import customtkinter as ctk
import webview

# Function to generate a Plotly chart and return HTML
def generate_plotly_chart_html():
    # Sample DataFrame
    dates = pd.date_range(start='2024-01-01', periods=100, freq='D')
    data = {
        'Column1': range(100),
        'Column2': range(100, 200),
        'Column3': range(200, 300)
    }
    df = pd.DataFrame(data, index=dates)

    # Reset the index to use the dates as a column for plotly express
    df_reset = df.reset_index()

    # Melt the DataFrame to have a long format suitable for plotly express
    df_melted = df_reset.melt(id_vars=df_reset.columns[0], var_name='Column', value_name='Value')

    # Create a line plot using plotly express
    fig = px.line(df_melted, x=df_reset.columns[0], y='Value', color='Column',
                  labels={df_reset.columns[0]: 'Date', 'Value': 'Values'},
                  title='DataFrame Line Plot')

    # Convert Plotly figure to HTML
    html_chart = fig.to_html(full_html=True)
    return html_chart

# Function to create and display the Plotly chart in a customtkinter window
def show_plotly_chart():
    # Create the main application window
    app = ctk.CTk()
    app.title("Plotly Chart in customtkinter")
    app.geometry("800x600")

    # Generate the Plotly chart HTML
    plotly_html = generate_plotly_chart_html()

    # Start a webview window with the Plotly HTML content
    webview.create_window("Plotly Chart", html=plotly_html)
    webview.start()

    # Start the main loop for the customtkinter app
    app.mainloop()

# Call the function to show the Plotly chart
show_plotly_chart()
