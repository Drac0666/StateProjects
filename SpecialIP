import win32com.client
import pandas as pd
import os

# Path to your folder containing .msg files
folder_path = r"C:\Your\Path\To\MSG\Folder"  # <-- update this

# Initialize Outlook COM
outlook = win32com.client.Dispatch("Outlook.Application")

# Create empty dictionary to store results
tables_dict = {}

# Walk through all files in the folder
for root, dirs, files in os.walk(folder_path):
    for file in files:
        if file.endswith(".msg"):
            file_path = os.path.join(root, file)
            print(f"\nProcessing: {file_path}")

            try:
                # Load MSG file
                msg = outlook.CreateItemFromTemplate(file_path)

                # Extract HTML body
                html_body = msg.HTMLBody

                # Parse tables
                tables = pd.read_html(html_body)

                if not tables:
                    print(f"No tables found in {file}")
                    continue

                # We assume you're only interested in the first table (if multiple)
                table = tables[0]

                # Drop fully empty rows
                table = table.dropna(how='all')

                # Find header row (where first column == "Date")
                header_row_index = table[table.iloc[:,0] == 'Date'].index

                if not header_row_index.empty:
                    header_row = header_row_index[0]

                    # Set new header
                    table.columns = table.iloc[header_row]
                    table = table.drop(index=range(0, header_row+1)).reset_index(drop=True)

                    print(f"Table extracted from {file}:")
                    print(table)

                    # Store cleaned table in dictionary
                    tables_dict[file] = table

                else:
                    print(f"No header row with 'Date' found in {file}")

            except Exception as e:
                print(f"Failed to process {file}: {e}")

# Now tables_dict holds all your processed tables
print("\nSummary of processed files:")
for filename, df in tables_dict.items():
    print(f"{filename}: {len(df)} rows")

# (Optional: you can now do further processing with tables_dict)
