import plotly.express as px
import pandas as pd

def plot_dataframe(df: pd.DataFrame):
    # Check if the DataFrame index is of datetime type
    if not pd.api.types.is_datetime64_any_dtype(df.index):
        raise ValueError("DataFrame index must be of datetime type.")
    
    # Reset the index to use the dates as a column for plotly express
    df_reset = df.reset_index()
    
    # Melt the DataFrame to have a long format suitable for plotly express
    df_melted = df_reset.melt(id_vars=df_reset.columns[0], var_name='Column', value_name='Value')
    
    # Create a line plot using plotly express
    fig = px.line(df_melted, x=df_reset.columns[0], y='Value', color='Column',
                  labels={df_reset.columns[0]: 'Date', 'Value': 'Values'},
                  title='DataFrame Line Plot')
    
    # Update layout for better visualization
    fig.update_layout(
        xaxis=dict(
            tickformat='%Y-%m-%d',  # Format x-axis as dates
            rangeslider=dict(visible=True)  # Add a range slider for the x-axis
        ),
        hovermode='x unified'
    )
    
    # Show the plot
    fig.show()

# Example usage:
# Assuming df is a DataFrame with a datetime index and some columns to plot
# plot_dataframe(df)
