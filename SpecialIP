import pandas as pd

# Example of your wide-format structure
data = {
    "Euro Area | Austria | 2 year | Mid Yield": [3.10],
    "Euro Area | Austria | 5 year | Mid Yield": [3.20],
    "Euro Area | Austria | 10 year | Mid Yield": [3.40],
    "Euro Area | Austria | 30 year | Mid Yield": [3.60],
    "Euro Area | Germany | 2 year | Mid Yield": [2.90],
    "Euro Area | Germany | 5 year | Mid Yield": [2.95],
    "Euro Area | Germany | 10 year | Mid Yield": [3.10],
    "Euro Area | Germany | 30 year | Mid Yield": [3.25],
    "Euro Area | France | 2 year | Mid Yield": [3.25],
    "Euro Area | France | 5 year | Mid Yield": [3.35],
    "Euro Area | France | 10 year | Mid Yield": [3.45],
    "Euro Area | France | 30 year | Mid Yield": [3.55],
    "Euro Area | Italy | 2 year | Mid Yield": [3.90],
    "Euro Area | Italy | 5 year | Mid Yield": [4.00],
    "Euro Area | Italy | 10 year | Mid Yield": [4.10],
    "Euro Area | Italy | 30 year | Mid Yield": [4.20]
}

df = pd.DataFrame(data)

# Step 1️⃣ — Unpivot / reshape the data
df_long = df.melt(var_name="Column", value_name="Yield")

# Step 2️⃣ — Extract components from the column name
parts = df_long["Column"].str.split(" \| ", expand=True)
df_long["Region"] = parts[0]
df_long["Country"] = parts[1]
df_long["Tenor"] = parts[2]
df_long["Field"] = parts[3]

# Step 3️⃣ — Pivot to get Country x Tenor matrix
pivot = df_long.pivot(index="Country", columns="Tenor", values="Yield")

# Step 4️⃣ — Compute spreads vs Germany by tenor
germany = pivot.loc["Germany"]
spreads = pivot.subtract(germany)

# Step 5️⃣ — Rename spread columns
spread_cols = {col: col.replace("year", "Y Spread") for col in spreads.columns}
spreads = spreads.rename(columns=spread_cols)

# Step 6️⃣ — Combine yields + spreads
result = pd.concat([pivot, spreads], axis=1)

# Step 7️⃣ — Order columns nicely
ordered_cols = []
for tenor in ["2 year", "5 year", "10 year", "30 year"]:
    if tenor in result.columns:
        ordered_cols += [tenor, tenor.replace("year", "Y Spread")]
result = result[ordered_cols]

# Step 8️⃣ — Optional rounding for clarity
result = result.round(2)

print(result)
