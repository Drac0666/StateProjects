import pandas as pd
from collections import defaultdict

# Sample dict of dataframes (df_dict), where each dataframe has unique vintage information
df_dict = {
    'df_2020_a': pd.DataFrame({
        'Jan': [2020, 1000],
        'Feb': [2020, 2000],
        'Mar': [2020, 1500]
    }, index=['Vintage', 'Current Balance']),
    'df_2020_b': pd.DataFrame({
        'Jan': [2020, 500],
        'Feb': [2020, 800],
        'Mar': [2020, 700]
    }, index=['Vintage', 'Current Balance']),
    'df_2021': pd.DataFrame({
        'Jan': [2021, 3000],
        'Feb': [2021, 4000],
        'Mar': [2021, 2500]
    }, index=['Vintage', 'Current Balance']),
    'df_2022': pd.DataFrame({
        'Jan': [2022, 5000],
        'Feb': [2022, 5500],
        'Mar': [2022, 6000]
    }, index=['Vintage', 'Current Balance'])
}

# Step 1: Group dataframes by vintage
vintage_groups = defaultdict(list)
for key, df in df_dict.items():
    vintage = df.loc['Vintage', 'Jan']  # Assume all months have the same Vintage value
    vintage_groups[vintage].append(df)

# Step 2: Calculate the shared VintageBalance for each vintage
vintage_balances = {}
for vintage, dfs in vintage_groups.items():
    # Sum the "Current Balance" for each month across dataframes with the same vintage
    vintage_balance = pd.DataFrame({col: sum(df.loc['Current Balance', col] for df in dfs) for col in ['Jan', 'Feb', 'Mar']}, index=['VintageBalance'])
    vintage_balances[vintage] = vintage_balance

# Step 3: Add the VintageBalance row to each dataframe in the dictionary
for vintage, dfs in vintage_groups.items():
    for df in dfs:
        df.loc['VintageBalance'] = vintage_balances[vintage].loc['VintageBalance']
        df_dict[key] = df  # Update the dictionary with the modified dataframe

# Display the modified dataframes
for key, df in df_dict.items():
    print(f"\n{key}:\n{df}")

import ace_tools as tools; tools.display_dataframe_to_user(name="Modified DataFrames with Shared VintageBalance", dataframe=df_dict)
