import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestClassifier
import joblib

# Load saved models, encoder, and known conditions
model_sec1 = joblib.load('model_sec1.pkl')
model_sec2 = joblib.load('model_sec2.pkl')
model_sec3 = joblib.load('model_sec3.pkl')
encoder = joblib.load('onehot_encoder.pkl')
known_conditions_set = joblib.load('known_conditions_set.pkl')

# Assume df_new is the new DataFrame with potential missing SEC values
df_new = pd.DataFrame()  # Replace with your actual DataFrame with missing SECs

# Use the encoder to transform new data's categorical columns
X_new_encoded = encoder.transform(df_new[['port_id', 'port_curr', 'investment_type']])

# Check each row in the encoded new data for known conditions
unknown_rows = []  # List to store indices of unknown rows

for idx, row in pd.DataFrame(X_new_encoded).iterrows():
    condition_tuple = tuple(row)
    if condition_tuple not in known_conditions_set:
        unknown_rows.append(idx)  # Add index of unknown row

# Filter out unknown rows from df_new and save them to 'UpdateMapping.csv'
if unknown_rows:
    df_unknown = df_new.iloc[unknown_rows]
    df_unknown.to_csv("UpdateMapping.csv", index=False)
    print("Unknown conditions saved to UpdateMapping.csv")
    has_unknowns = True  # Global flag to indicate unknowns were found
else:
    has_unknowns = False  # No unknowns found

# Halt execution if unknowns are found
if has_unknowns:
    print("Execution halted due to unknown conditions.")
else:
    # Proceed with predictions for known conditions
    df_new['SEC1'] = 'Unknown'
    df_new['SEC2'] = 'Unknown'
    df_new['SEC3'] = 'Unknown'

    # Predict only for known rows
    for idx, row in pd.DataFrame(X_new_encoded).iterrows():
        condition_tuple = tuple(row)
        if condition_tuple in known_conditions_set:
            df_new.at[idx, 'SEC1'] = model_sec1.predict([row])[0]
            df_new.at[idx, 'SEC2'] = model_sec2.predict([row])[0]
            df_new.at[idx, 'SEC3'] = model_sec3.predict([row])[0]

    # Display the DataFrame with predicted or "Unknown" SEC values
    print(df_new)
