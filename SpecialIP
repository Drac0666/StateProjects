def update_database(new_file: str, db_file: str = DB_FILE):
    """Update the existing pivot database with a new file, with overwrite protection."""
    # Load new data and extract date
    new_data = pd.read_excel(new_file)
    new_date = new_data['As of Date'].iloc[0]
    new_pivot = new_data.pivot_table(index="ISIN", values="Par Value", aggfunc="sum")
    new_pivot.columns = [new_date]

    # Load existing database
    if os.path.exists(db_file):
        db = pd.read_excel(db_file, index_col="ISIN")
    else:
        print("Database not found. Creating new one instead.")
        new_pivot.to_excel(db_file)
        print(f"Database created: {db_file}")
        return

    # Check if date already exists
    if str(new_date) in db.columns:
        response = input(f"\n⚠️ Date {new_date} already exists in the database. Overwrite? (y/n): ").strip().lower()
        if response != 'y':
            print("Update cancelled.")
            return
        else:
            print(f"Overwriting column for {new_date}.")
            db.drop(columns=[new_date], inplace=True)

    # Backup before overwrite
    backup_database(db_file)

    # Merge and update
    updated_db = pd.concat([db, new_pivot], axis=1).fillna(0)
    updated_db = updated_db[sorted(updated_db.columns)]

    # Save updated
    updated_db.to_excel(db_file)
    print(f"Database updated with data for {new_date}: {db_file}")
