All of the aforementioned checks will be carried out at least quarterly, and the results will be documented as screenshots from their respective check tabs within the Excel spreadsheet. This approach ensures a regular and systematic review of the model's quality and accuracy.

Furthermore, the entire Excel spreadsheet will be subjected to a "four eyes review." This means that two individuals will independently review and verify the spreadsheet's contents, calculations, and the outcomes of the quality checks. This collaborative review process adds an extra layer of assurance to maintain the highest standards of data fidelity and report reliability.

The model owner has decided to implement a set of quality checks to ensure the accuracy and reliability of the reports and data generated by the model. These checks cover several important areas:

    Fair Value Comparison: They are comparing the model's output to the High-Frequency Valuation (HFV) file to make sure that the valuations are consistently accurate.

    Spread Data Verification: The accuracy and currency of spread data are being verified to ensure that the model is using reliable information.

    Spread Positivity Check: They're checking that all spreads are greater than zero, as this is a fundamental requirement for the model's results.

    Error-Free Spread Changes Template: The owner is making sure that the Spread Changes Template remains error-free, so inaccuracies don't affect the model's performance.

    Rating Integrity and Completeness: They are verifying that there are no missing ratings for instruments, which is crucial for a comprehensive portfolio assessment.

    Uniform Temporal Alignment: All securities are checked to ensure they are evaluated as of the same date, maintaining consistency and comparability in the results.

These checks reflect the owner's commitment to maintaining high standards of accuracy and data reliability, enhancing confidence in the model's usefulness and effectiveness.


def double_click_open(event):
    selected_item = listbox.get(listbox.curselection())
    os.startfile(selected_item[0])
