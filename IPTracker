import os
from datetime import datetime, timedelta
from collections import defaultdict

def find_closest_to_month_end_files(main_folder):
    closest_files = []
    for root, _, files in os.walk(main_folder):
        date_files = defaultdict(list)
        for filename in files:
            try:
                # Extract the date from the filename
                file_date = datetime.strptime(filename[-12:-4], "%Y%m%d")
                # Group files by their year and month
                key = (file_date.year, file_date.month)
                date_files[key].append((filename, os.path.join(root, filename)))
            except ValueError:
                pass  # Skip files that don't match the expected format

        for key, files_in_month in date_files.items():
            # Find the file closest to the end of the month
            last_day_of_month = (datetime(key[0], key[1], 1) + timedelta(days=31)).replace(day=1) - timedelta(days=1)
            closest_file = min(files_in_month, key=lambda x: abs(x[0]))
            closest_files.append(closest_file)

    return closest_files

main_folder = "/path/to/your/main/folder"
closest_files = find_closest_to_month_end_files(main_folder)
for filename, full_path in closest_files:
    print(f"Closest to month end: {filename} at {full_path}")
